// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: header.proto

package uk.me.grambo.syncro.pb;

public final class Header {
  private Header() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class PacketHeader extends
      com.google.protobuf.GeneratedMessage {
    // Use PacketHeader.newBuilder() to construct.
    private PacketHeader() {
      initFields();
    }
    private PacketHeader(boolean noInit) {}
    
    private static final PacketHeader defaultInstance;
    public static PacketHeader getDefaultInstance() {
      return defaultInstance;
    }
    
    public PacketHeader getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.me.grambo.syncro.pb.Header.internal_static_syncro_pb_PacketHeader_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.me.grambo.syncro.pb.Header.internal_static_syncro_pb_PacketHeader_fieldAccessorTable;
    }
    
    // required int32 packet_type = 1;
    public static final int PACKET_TYPE_FIELD_NUMBER = 1;
    private boolean hasPacketType;
    private int packetType_ = 0;
    public boolean hasPacketType() { return hasPacketType; }
    public int getPacketType() { return packetType_; }
    
    // repeated int32 subpacket_sizes = 2;
    public static final int SUBPACKET_SIZES_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> subpacketSizes_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getSubpacketSizesList() {
      return subpacketSizes_;
    }
    public int getSubpacketSizesCount() { return subpacketSizes_.size(); }
    public int getSubpacketSizes(int index) {
      return subpacketSizes_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasPacketType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPacketType()) {
        output.writeInt32(1, getPacketType());
      }
      for (int element : getSubpacketSizesList()) {
        output.writeInt32(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPacketType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getPacketType());
      }
      {
        int dataSize = 0;
        for (int element : getSubpacketSizesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getSubpacketSizesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static uk.me.grambo.syncro.pb.Header.PacketHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Header.PacketHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Header.PacketHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Header.PacketHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Header.PacketHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Header.PacketHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Header.PacketHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.me.grambo.syncro.pb.Header.PacketHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.me.grambo.syncro.pb.Header.PacketHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Header.PacketHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(uk.me.grambo.syncro.pb.Header.PacketHeader prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private uk.me.grambo.syncro.pb.Header.PacketHeader result;
      
      // Construct using uk.me.grambo.syncro.pb.Header.PacketHeader.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new uk.me.grambo.syncro.pb.Header.PacketHeader();
        return builder;
      }
      
      protected uk.me.grambo.syncro.pb.Header.PacketHeader internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new uk.me.grambo.syncro.pb.Header.PacketHeader();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.me.grambo.syncro.pb.Header.PacketHeader.getDescriptor();
      }
      
      public uk.me.grambo.syncro.pb.Header.PacketHeader getDefaultInstanceForType() {
        return uk.me.grambo.syncro.pb.Header.PacketHeader.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public uk.me.grambo.syncro.pb.Header.PacketHeader build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private uk.me.grambo.syncro.pb.Header.PacketHeader buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public uk.me.grambo.syncro.pb.Header.PacketHeader buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.subpacketSizes_ != java.util.Collections.EMPTY_LIST) {
          result.subpacketSizes_ =
            java.util.Collections.unmodifiableList(result.subpacketSizes_);
        }
        uk.me.grambo.syncro.pb.Header.PacketHeader returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.me.grambo.syncro.pb.Header.PacketHeader) {
          return mergeFrom((uk.me.grambo.syncro.pb.Header.PacketHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(uk.me.grambo.syncro.pb.Header.PacketHeader other) {
        if (other == uk.me.grambo.syncro.pb.Header.PacketHeader.getDefaultInstance()) return this;
        if (other.hasPacketType()) {
          setPacketType(other.getPacketType());
        }
        if (!other.subpacketSizes_.isEmpty()) {
          if (result.subpacketSizes_.isEmpty()) {
            result.subpacketSizes_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.subpacketSizes_.addAll(other.subpacketSizes_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setPacketType(input.readInt32());
              break;
            }
            case 16: {
              addSubpacketSizes(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSubpacketSizes(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // required int32 packet_type = 1;
      public boolean hasPacketType() {
        return result.hasPacketType();
      }
      public int getPacketType() {
        return result.getPacketType();
      }
      public Builder setPacketType(int value) {
        result.hasPacketType = true;
        result.packetType_ = value;
        return this;
      }
      public Builder clearPacketType() {
        result.hasPacketType = false;
        result.packetType_ = 0;
        return this;
      }
      
      // repeated int32 subpacket_sizes = 2;
      public java.util.List<java.lang.Integer> getSubpacketSizesList() {
        return java.util.Collections.unmodifiableList(result.subpacketSizes_);
      }
      public int getSubpacketSizesCount() {
        return result.getSubpacketSizesCount();
      }
      public int getSubpacketSizes(int index) {
        return result.getSubpacketSizes(index);
      }
      public Builder setSubpacketSizes(int index, int value) {
        result.subpacketSizes_.set(index, value);
        return this;
      }
      public Builder addSubpacketSizes(int value) {
        if (result.subpacketSizes_.isEmpty()) {
          result.subpacketSizes_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.subpacketSizes_.add(value);
        return this;
      }
      public Builder addAllSubpacketSizes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.subpacketSizes_.isEmpty()) {
          result.subpacketSizes_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.subpacketSizes_);
        return this;
      }
      public Builder clearSubpacketSizes() {
        result.subpacketSizes_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:syncro.pb.PacketHeader)
    }
    
    static {
      defaultInstance = new PacketHeader(true);
      uk.me.grambo.syncro.pb.Header.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:syncro.pb.PacketHeader)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_syncro_pb_PacketHeader_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_syncro_pb_PacketHeader_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014header.proto\022\tsyncro.pb\"<\n\014PacketHeade" +
      "r\022\023\n\013packet_type\030\001 \002(\005\022\027\n\017subpacket_size" +
      "s\030\002 \003(\005B\030\n\026uk.me.grambo.syncro.pb"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_syncro_pb_PacketHeader_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_syncro_pb_PacketHeader_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_syncro_pb_PacketHeader_descriptor,
              new java.lang.String[] { "PacketType", "SubpacketSizes", },
              uk.me.grambo.syncro.pb.Header.PacketHeader.class,
              uk.me.grambo.syncro.pb.Header.PacketHeader.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
