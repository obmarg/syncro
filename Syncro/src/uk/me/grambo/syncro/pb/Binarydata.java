// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: binarydata.proto

package uk.me.grambo.syncro.pb;

public final class Binarydata {
  private Binarydata() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class BinaryDataRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use BinaryDataRequest.newBuilder() to construct.
    private BinaryDataRequest() {
      initFields();
    }
    private BinaryDataRequest(boolean noInit) {}
    
    private static final BinaryDataRequest defaultInstance;
    public static BinaryDataRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public BinaryDataRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.me.grambo.syncro.pb.Binarydata.internal_static_syncro_pb_BinaryDataRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.me.grambo.syncro.pb.Binarydata.internal_static_syncro_pb_BinaryDataRequest_fieldAccessorTable;
    }
    
    // optional string file_name = 1;
    public static final int FILE_NAME_FIELD_NUMBER = 1;
    private boolean hasFileName;
    private java.lang.String fileName_ = "";
    public boolean hasFileName() { return hasFileName; }
    public java.lang.String getFileName() { return fileName_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFileName()) {
        output.writeString(1, getFileName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFileName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getFileName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest result;
      
      // Construct using uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest();
        return builder;
      }
      
      protected uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest.getDescriptor();
      }
      
      public uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest getDefaultInstanceForType() {
        return uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest) {
          return mergeFrom((uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest other) {
        if (other == uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest.getDefaultInstance()) return this;
        if (other.hasFileName()) {
          setFileName(other.getFileName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setFileName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string file_name = 1;
      public boolean hasFileName() {
        return result.hasFileName();
      }
      public java.lang.String getFileName() {
        return result.getFileName();
      }
      public Builder setFileName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFileName = true;
        result.fileName_ = value;
        return this;
      }
      public Builder clearFileName() {
        result.hasFileName = false;
        result.fileName_ = getDefaultInstance().getFileName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:syncro.pb.BinaryDataRequest)
    }
    
    static {
      defaultInstance = new BinaryDataRequest(true);
      uk.me.grambo.syncro.pb.Binarydata.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:syncro.pb.BinaryDataRequest)
  }
  
  public static final class BinaryPacketHeader extends
      com.google.protobuf.GeneratedMessage {
    // Use BinaryPacketHeader.newBuilder() to construct.
    private BinaryPacketHeader() {
      initFields();
    }
    private BinaryPacketHeader(boolean noInit) {}
    
    private static final BinaryPacketHeader defaultInstance;
    public static BinaryPacketHeader getDefaultInstance() {
      return defaultInstance;
    }
    
    public BinaryPacketHeader getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.me.grambo.syncro.pb.Binarydata.internal_static_syncro_pb_BinaryPacketHeader_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.me.grambo.syncro.pb.Binarydata.internal_static_syncro_pb_BinaryPacketHeader_fieldAccessorTable;
    }
    
    public enum SectionType
        implements com.google.protobuf.ProtocolMessageEnum {
      START(0, 0),
      MIDDLE(1, 1),
      END(2, 2),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static SectionType valueOf(int value) {
        switch (value) {
          case 0: return START;
          case 1: return MIDDLE;
          case 2: return END;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<SectionType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<SectionType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SectionType>() {
              public SectionType findValueByNumber(int number) {
                return SectionType.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final SectionType[] VALUES = {
        START, MIDDLE, END, 
      };
      public static SectionType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private SectionType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        uk.me.grambo.syncro.pb.Binarydata.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:syncro.pb.BinaryPacketHeader.SectionType)
    }
    
    // optional int32 file_size = 1;
    public static final int FILE_SIZE_FIELD_NUMBER = 1;
    private boolean hasFileSize;
    private int fileSize_ = 0;
    public boolean hasFileSize() { return hasFileSize; }
    public int getFileSize() { return fileSize_; }
    
    // optional int32 file_offset = 2;
    public static final int FILE_OFFSET_FIELD_NUMBER = 2;
    private boolean hasFileOffset;
    private int fileOffset_ = 0;
    public boolean hasFileOffset() { return hasFileOffset; }
    public int getFileOffset() { return fileOffset_; }
    
    // optional int32 hash_size = 3;
    public static final int HASH_SIZE_FIELD_NUMBER = 3;
    private boolean hasHashSize;
    private int hashSize_ = 0;
    public boolean hasHashSize() { return hasHashSize; }
    public int getHashSize() { return hashSize_; }
    
    // optional .syncro.pb.BinaryPacketHeader.SectionType binary_packet_type = 4;
    public static final int BINARY_PACKET_TYPE_FIELD_NUMBER = 4;
    private boolean hasBinaryPacketType;
    private uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader.SectionType binaryPacketType_;
    public boolean hasBinaryPacketType() { return hasBinaryPacketType; }
    public uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader.SectionType getBinaryPacketType() { return binaryPacketType_; }
    
    private void initFields() {
      binaryPacketType_ = uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader.SectionType.START;
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFileSize()) {
        output.writeInt32(1, getFileSize());
      }
      if (hasFileOffset()) {
        output.writeInt32(2, getFileOffset());
      }
      if (hasHashSize()) {
        output.writeInt32(3, getHashSize());
      }
      if (hasBinaryPacketType()) {
        output.writeEnum(4, getBinaryPacketType().getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFileSize()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getFileSize());
      }
      if (hasFileOffset()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getFileOffset());
      }
      if (hasHashSize()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getHashSize());
      }
      if (hasBinaryPacketType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, getBinaryPacketType().getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader result;
      
      // Construct using uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader();
        return builder;
      }
      
      protected uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader.getDescriptor();
      }
      
      public uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader getDefaultInstanceForType() {
        return uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader) {
          return mergeFrom((uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader other) {
        if (other == uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader.getDefaultInstance()) return this;
        if (other.hasFileSize()) {
          setFileSize(other.getFileSize());
        }
        if (other.hasFileOffset()) {
          setFileOffset(other.getFileOffset());
        }
        if (other.hasHashSize()) {
          setHashSize(other.getHashSize());
        }
        if (other.hasBinaryPacketType()) {
          setBinaryPacketType(other.getBinaryPacketType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setFileSize(input.readInt32());
              break;
            }
            case 16: {
              setFileOffset(input.readInt32());
              break;
            }
            case 24: {
              setHashSize(input.readInt32());
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader.SectionType value = uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader.SectionType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                setBinaryPacketType(value);
              }
              break;
            }
          }
        }
      }
      
      
      // optional int32 file_size = 1;
      public boolean hasFileSize() {
        return result.hasFileSize();
      }
      public int getFileSize() {
        return result.getFileSize();
      }
      public Builder setFileSize(int value) {
        result.hasFileSize = true;
        result.fileSize_ = value;
        return this;
      }
      public Builder clearFileSize() {
        result.hasFileSize = false;
        result.fileSize_ = 0;
        return this;
      }
      
      // optional int32 file_offset = 2;
      public boolean hasFileOffset() {
        return result.hasFileOffset();
      }
      public int getFileOffset() {
        return result.getFileOffset();
      }
      public Builder setFileOffset(int value) {
        result.hasFileOffset = true;
        result.fileOffset_ = value;
        return this;
      }
      public Builder clearFileOffset() {
        result.hasFileOffset = false;
        result.fileOffset_ = 0;
        return this;
      }
      
      // optional int32 hash_size = 3;
      public boolean hasHashSize() {
        return result.hasHashSize();
      }
      public int getHashSize() {
        return result.getHashSize();
      }
      public Builder setHashSize(int value) {
        result.hasHashSize = true;
        result.hashSize_ = value;
        return this;
      }
      public Builder clearHashSize() {
        result.hasHashSize = false;
        result.hashSize_ = 0;
        return this;
      }
      
      // optional .syncro.pb.BinaryPacketHeader.SectionType binary_packet_type = 4;
      public boolean hasBinaryPacketType() {
        return result.hasBinaryPacketType();
      }
      public uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader.SectionType getBinaryPacketType() {
        return result.getBinaryPacketType();
      }
      public Builder setBinaryPacketType(uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader.SectionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBinaryPacketType = true;
        result.binaryPacketType_ = value;
        return this;
      }
      public Builder clearBinaryPacketType() {
        result.hasBinaryPacketType = false;
        result.binaryPacketType_ = uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader.SectionType.START;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:syncro.pb.BinaryPacketHeader)
    }
    
    static {
      defaultInstance = new BinaryPacketHeader(true);
      uk.me.grambo.syncro.pb.Binarydata.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:syncro.pb.BinaryPacketHeader)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_syncro_pb_BinaryDataRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_syncro_pb_BinaryDataRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_syncro_pb_BinaryPacketHeader_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_syncro_pb_BinaryPacketHeader_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020binarydata.proto\022\tsyncro.pb\"&\n\021BinaryD" +
      "ataRequest\022\021\n\tfile_name\030\001 \001(\t\"\305\001\n\022Binary" +
      "PacketHeader\022\021\n\tfile_size\030\001 \001(\005\022\023\n\013file_" +
      "offset\030\002 \001(\005\022\021\n\thash_size\030\003 \001(\005\022E\n\022binar" +
      "y_packet_type\030\004 \001(\0162).syncro.pb.BinaryPa" +
      "cketHeader.SectionType\"-\n\013SectionType\022\t\n" +
      "\005START\020\000\022\n\n\006MIDDLE\020\001\022\007\n\003END\020\002B\030\n\026uk.me.g" +
      "rambo.syncro.pb"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_syncro_pb_BinaryDataRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_syncro_pb_BinaryDataRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_syncro_pb_BinaryDataRequest_descriptor,
              new java.lang.String[] { "FileName", },
              uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest.class,
              uk.me.grambo.syncro.pb.Binarydata.BinaryDataRequest.Builder.class);
          internal_static_syncro_pb_BinaryPacketHeader_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_syncro_pb_BinaryPacketHeader_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_syncro_pb_BinaryPacketHeader_descriptor,
              new java.lang.String[] { "FileSize", "FileOffset", "HashSize", "BinaryPacketType", },
              uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader.class,
              uk.me.grambo.syncro.pb.Binarydata.BinaryPacketHeader.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
