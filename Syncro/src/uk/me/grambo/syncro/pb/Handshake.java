// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: handshake.proto

package uk.me.grambo.syncro.pb;

public final class Handshake {
  private Handshake() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public static final class SaltRequest extends
      com.google.protobuf.GeneratedMessageLite {
    // Use SaltRequest.newBuilder() to construct.
    private SaltRequest() {
      initFields();
    }
    private SaltRequest(boolean noInit) {}
    
    private static final SaltRequest defaultInstance;
    public static SaltRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public SaltRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional int32 size = 1;
    public static final int SIZE_FIELD_NUMBER = 1;
    private boolean hasSize;
    private int size_ = 0;
    public boolean hasSize() { return hasSize; }
    public int getSize() { return size_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSize()) {
        output.writeInt32(1, getSize());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSize()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getSize());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static uk.me.grambo.syncro.pb.Handshake.SaltRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(uk.me.grambo.syncro.pb.Handshake.SaltRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          uk.me.grambo.syncro.pb.Handshake.SaltRequest, Builder> {
      private uk.me.grambo.syncro.pb.Handshake.SaltRequest result;
      
      // Construct using uk.me.grambo.syncro.pb.Handshake.SaltRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new uk.me.grambo.syncro.pb.Handshake.SaltRequest();
        return builder;
      }
      
      protected uk.me.grambo.syncro.pb.Handshake.SaltRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new uk.me.grambo.syncro.pb.Handshake.SaltRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public uk.me.grambo.syncro.pb.Handshake.SaltRequest getDefaultInstanceForType() {
        return uk.me.grambo.syncro.pb.Handshake.SaltRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public uk.me.grambo.syncro.pb.Handshake.SaltRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private uk.me.grambo.syncro.pb.Handshake.SaltRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public uk.me.grambo.syncro.pb.Handshake.SaltRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        uk.me.grambo.syncro.pb.Handshake.SaltRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(uk.me.grambo.syncro.pb.Handshake.SaltRequest other) {
        if (other == uk.me.grambo.syncro.pb.Handshake.SaltRequest.getDefaultInstance()) return this;
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              setSize(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 size = 1;
      public boolean hasSize() {
        return result.hasSize();
      }
      public int getSize() {
        return result.getSize();
      }
      public Builder setSize(int value) {
        result.hasSize = true;
        result.size_ = value;
        return this;
      }
      public Builder clearSize() {
        result.hasSize = false;
        result.size_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:syncro.pb.SaltRequest)
    }
    
    static {
      defaultInstance = new SaltRequest(true);
      uk.me.grambo.syncro.pb.Handshake.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:syncro.pb.SaltRequest)
  }
  
  public static final class SaltResponse extends
      com.google.protobuf.GeneratedMessageLite {
    // Use SaltResponse.newBuilder() to construct.
    private SaltResponse() {
      initFields();
    }
    private SaltResponse(boolean noInit) {}
    
    private static final SaltResponse defaultInstance;
    public static SaltResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public SaltResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // optional string salt = 1;
    public static final int SALT_FIELD_NUMBER = 1;
    private boolean hasSalt;
    private java.lang.String salt_ = "";
    public boolean hasSalt() { return hasSalt; }
    public java.lang.String getSalt() { return salt_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSalt()) {
        output.writeString(1, getSalt());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSalt()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSalt());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static uk.me.grambo.syncro.pb.Handshake.SaltResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.SaltResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(uk.me.grambo.syncro.pb.Handshake.SaltResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          uk.me.grambo.syncro.pb.Handshake.SaltResponse, Builder> {
      private uk.me.grambo.syncro.pb.Handshake.SaltResponse result;
      
      // Construct using uk.me.grambo.syncro.pb.Handshake.SaltResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new uk.me.grambo.syncro.pb.Handshake.SaltResponse();
        return builder;
      }
      
      protected uk.me.grambo.syncro.pb.Handshake.SaltResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new uk.me.grambo.syncro.pb.Handshake.SaltResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public uk.me.grambo.syncro.pb.Handshake.SaltResponse getDefaultInstanceForType() {
        return uk.me.grambo.syncro.pb.Handshake.SaltResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public uk.me.grambo.syncro.pb.Handshake.SaltResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private uk.me.grambo.syncro.pb.Handshake.SaltResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public uk.me.grambo.syncro.pb.Handshake.SaltResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        uk.me.grambo.syncro.pb.Handshake.SaltResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(uk.me.grambo.syncro.pb.Handshake.SaltResponse other) {
        if (other == uk.me.grambo.syncro.pb.Handshake.SaltResponse.getDefaultInstance()) return this;
        if (other.hasSalt()) {
          setSalt(other.getSalt());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setSalt(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string salt = 1;
      public boolean hasSalt() {
        return result.hasSalt();
      }
      public java.lang.String getSalt() {
        return result.getSalt();
      }
      public Builder setSalt(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSalt = true;
        result.salt_ = value;
        return this;
      }
      public Builder clearSalt() {
        result.hasSalt = false;
        result.salt_ = getDefaultInstance().getSalt();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:syncro.pb.SaltResponse)
    }
    
    static {
      defaultInstance = new SaltResponse(true);
      uk.me.grambo.syncro.pb.Handshake.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:syncro.pb.SaltResponse)
  }
  
  public static final class HandshakeRequest extends
      com.google.protobuf.GeneratedMessageLite {
    // Use HandshakeRequest.newBuilder() to construct.
    private HandshakeRequest() {
      initFields();
    }
    private HandshakeRequest(boolean noInit) {}
    
    private static final HandshakeRequest defaultInstance;
    public static HandshakeRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public HandshakeRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // required string magic = 1;
    public static final int MAGIC_FIELD_NUMBER = 1;
    private boolean hasMagic;
    private java.lang.String magic_ = "";
    public boolean hasMagic() { return hasMagic; }
    public java.lang.String getMagic() { return magic_; }
    
    // optional int32 client_ver_major = 2;
    public static final int CLIENT_VER_MAJOR_FIELD_NUMBER = 2;
    private boolean hasClientVerMajor;
    private int clientVerMajor_ = 0;
    public boolean hasClientVerMajor() { return hasClientVerMajor; }
    public int getClientVerMajor() { return clientVerMajor_; }
    
    // optional int32 client_ver_minor = 3;
    public static final int CLIENT_VER_MINOR_FIELD_NUMBER = 3;
    private boolean hasClientVerMinor;
    private int clientVerMinor_ = 0;
    public boolean hasClientVerMinor() { return hasClientVerMinor; }
    public int getClientVerMinor() { return clientVerMinor_; }
    
    // optional string username = 4;
    public static final int USERNAME_FIELD_NUMBER = 4;
    private boolean hasUsername;
    private java.lang.String username_ = "";
    public boolean hasUsername() { return hasUsername; }
    public java.lang.String getUsername() { return username_; }
    
    // optional string password = 5;
    public static final int PASSWORD_FIELD_NUMBER = 5;
    private boolean hasPassword;
    private java.lang.String password_ = "";
    public boolean hasPassword() { return hasPassword; }
    public java.lang.String getPassword() { return password_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasMagic) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasMagic()) {
        output.writeString(1, getMagic());
      }
      if (hasClientVerMajor()) {
        output.writeInt32(2, getClientVerMajor());
      }
      if (hasClientVerMinor()) {
        output.writeInt32(3, getClientVerMinor());
      }
      if (hasUsername()) {
        output.writeString(4, getUsername());
      }
      if (hasPassword()) {
        output.writeString(5, getPassword());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasMagic()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getMagic());
      }
      if (hasClientVerMajor()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getClientVerMajor());
      }
      if (hasClientVerMinor()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getClientVerMinor());
      }
      if (hasUsername()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getUsername());
      }
      if (hasPassword()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getPassword());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(uk.me.grambo.syncro.pb.Handshake.HandshakeRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          uk.me.grambo.syncro.pb.Handshake.HandshakeRequest, Builder> {
      private uk.me.grambo.syncro.pb.Handshake.HandshakeRequest result;
      
      // Construct using uk.me.grambo.syncro.pb.Handshake.HandshakeRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new uk.me.grambo.syncro.pb.Handshake.HandshakeRequest();
        return builder;
      }
      
      protected uk.me.grambo.syncro.pb.Handshake.HandshakeRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new uk.me.grambo.syncro.pb.Handshake.HandshakeRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public uk.me.grambo.syncro.pb.Handshake.HandshakeRequest getDefaultInstanceForType() {
        return uk.me.grambo.syncro.pb.Handshake.HandshakeRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public uk.me.grambo.syncro.pb.Handshake.HandshakeRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private uk.me.grambo.syncro.pb.Handshake.HandshakeRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public uk.me.grambo.syncro.pb.Handshake.HandshakeRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        uk.me.grambo.syncro.pb.Handshake.HandshakeRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(uk.me.grambo.syncro.pb.Handshake.HandshakeRequest other) {
        if (other == uk.me.grambo.syncro.pb.Handshake.HandshakeRequest.getDefaultInstance()) return this;
        if (other.hasMagic()) {
          setMagic(other.getMagic());
        }
        if (other.hasClientVerMajor()) {
          setClientVerMajor(other.getClientVerMajor());
        }
        if (other.hasClientVerMinor()) {
          setClientVerMinor(other.getClientVerMinor());
        }
        if (other.hasUsername()) {
          setUsername(other.getUsername());
        }
        if (other.hasPassword()) {
          setPassword(other.getPassword());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setMagic(input.readString());
              break;
            }
            case 16: {
              setClientVerMajor(input.readInt32());
              break;
            }
            case 24: {
              setClientVerMinor(input.readInt32());
              break;
            }
            case 34: {
              setUsername(input.readString());
              break;
            }
            case 42: {
              setPassword(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string magic = 1;
      public boolean hasMagic() {
        return result.hasMagic();
      }
      public java.lang.String getMagic() {
        return result.getMagic();
      }
      public Builder setMagic(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMagic = true;
        result.magic_ = value;
        return this;
      }
      public Builder clearMagic() {
        result.hasMagic = false;
        result.magic_ = getDefaultInstance().getMagic();
        return this;
      }
      
      // optional int32 client_ver_major = 2;
      public boolean hasClientVerMajor() {
        return result.hasClientVerMajor();
      }
      public int getClientVerMajor() {
        return result.getClientVerMajor();
      }
      public Builder setClientVerMajor(int value) {
        result.hasClientVerMajor = true;
        result.clientVerMajor_ = value;
        return this;
      }
      public Builder clearClientVerMajor() {
        result.hasClientVerMajor = false;
        result.clientVerMajor_ = 0;
        return this;
      }
      
      // optional int32 client_ver_minor = 3;
      public boolean hasClientVerMinor() {
        return result.hasClientVerMinor();
      }
      public int getClientVerMinor() {
        return result.getClientVerMinor();
      }
      public Builder setClientVerMinor(int value) {
        result.hasClientVerMinor = true;
        result.clientVerMinor_ = value;
        return this;
      }
      public Builder clearClientVerMinor() {
        result.hasClientVerMinor = false;
        result.clientVerMinor_ = 0;
        return this;
      }
      
      // optional string username = 4;
      public boolean hasUsername() {
        return result.hasUsername();
      }
      public java.lang.String getUsername() {
        return result.getUsername();
      }
      public Builder setUsername(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder clearUsername() {
        result.hasUsername = false;
        result.username_ = getDefaultInstance().getUsername();
        return this;
      }
      
      // optional string password = 5;
      public boolean hasPassword() {
        return result.hasPassword();
      }
      public java.lang.String getPassword() {
        return result.getPassword();
      }
      public Builder setPassword(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder clearPassword() {
        result.hasPassword = false;
        result.password_ = getDefaultInstance().getPassword();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:syncro.pb.HandshakeRequest)
    }
    
    static {
      defaultInstance = new HandshakeRequest(true);
      uk.me.grambo.syncro.pb.Handshake.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:syncro.pb.HandshakeRequest)
  }
  
  public static final class HandshakeResponse extends
      com.google.protobuf.GeneratedMessageLite {
    // Use HandshakeResponse.newBuilder() to construct.
    private HandshakeResponse() {
      initFields();
    }
    private HandshakeResponse(boolean noInit) {}
    
    private static final HandshakeResponse defaultInstance;
    public static HandshakeResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public HandshakeResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // required string magic = 1;
    public static final int MAGIC_FIELD_NUMBER = 1;
    private boolean hasMagic;
    private java.lang.String magic_ = "";
    public boolean hasMagic() { return hasMagic; }
    public java.lang.String getMagic() { return magic_; }
    
    // optional string uuid = 2;
    public static final int UUID_FIELD_NUMBER = 2;
    private boolean hasUuid;
    private java.lang.String uuid_ = "";
    public boolean hasUuid() { return hasUuid; }
    public java.lang.String getUuid() { return uuid_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasMagic) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasMagic()) {
        output.writeString(1, getMagic());
      }
      if (hasUuid()) {
        output.writeString(2, getUuid());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasMagic()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getMagic());
      }
      if (hasUuid()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getUuid());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static uk.me.grambo.syncro.pb.Handshake.HandshakeResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(uk.me.grambo.syncro.pb.Handshake.HandshakeResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          uk.me.grambo.syncro.pb.Handshake.HandshakeResponse, Builder> {
      private uk.me.grambo.syncro.pb.Handshake.HandshakeResponse result;
      
      // Construct using uk.me.grambo.syncro.pb.Handshake.HandshakeResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new uk.me.grambo.syncro.pb.Handshake.HandshakeResponse();
        return builder;
      }
      
      protected uk.me.grambo.syncro.pb.Handshake.HandshakeResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new uk.me.grambo.syncro.pb.Handshake.HandshakeResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public uk.me.grambo.syncro.pb.Handshake.HandshakeResponse getDefaultInstanceForType() {
        return uk.me.grambo.syncro.pb.Handshake.HandshakeResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public uk.me.grambo.syncro.pb.Handshake.HandshakeResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private uk.me.grambo.syncro.pb.Handshake.HandshakeResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public uk.me.grambo.syncro.pb.Handshake.HandshakeResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        uk.me.grambo.syncro.pb.Handshake.HandshakeResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(uk.me.grambo.syncro.pb.Handshake.HandshakeResponse other) {
        if (other == uk.me.grambo.syncro.pb.Handshake.HandshakeResponse.getDefaultInstance()) return this;
        if (other.hasMagic()) {
          setMagic(other.getMagic());
        }
        if (other.hasUuid()) {
          setUuid(other.getUuid());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setMagic(input.readString());
              break;
            }
            case 18: {
              setUuid(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string magic = 1;
      public boolean hasMagic() {
        return result.hasMagic();
      }
      public java.lang.String getMagic() {
        return result.getMagic();
      }
      public Builder setMagic(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMagic = true;
        result.magic_ = value;
        return this;
      }
      public Builder clearMagic() {
        result.hasMagic = false;
        result.magic_ = getDefaultInstance().getMagic();
        return this;
      }
      
      // optional string uuid = 2;
      public boolean hasUuid() {
        return result.hasUuid();
      }
      public java.lang.String getUuid() {
        return result.getUuid();
      }
      public Builder setUuid(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUuid = true;
        result.uuid_ = value;
        return this;
      }
      public Builder clearUuid() {
        result.hasUuid = false;
        result.uuid_ = getDefaultInstance().getUuid();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:syncro.pb.HandshakeResponse)
    }
    
    static {
      defaultInstance = new HandshakeResponse(true);
      uk.me.grambo.syncro.pb.Handshake.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:syncro.pb.HandshakeResponse)
  }
  
  
  static {
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
