//  This file is part of Syncro. 
//	Copyright (c) Graeme Coupar <grambo@grambo.me.uk>
//
//	Syncro is free software: you can redistribute it and/or modify
//	it under the terms of the GNU General Public License as published by
//	the Free Software Foundation, either version 3 of the License, or	(at your option) any later version.
//
//	Syncro is distributed in the hope that it will be useful,
//	but WITHOUT ANY WARRANTY; without even the implied warranty of
//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//	GNU General Public License for more details.
//
//	You should have received a copy of the GNU General Public License
//	along with Syncro.  If not, see <http://www.gnu.org/licenses/>.
//

package syncro.pb;

option java_package = "uk.me.grambo.syncro.comms.pb";
option optimize_for = LITE_RUNTIME;

message FileHashRequest {
	optional string file_name = 1;
	optional int32 folder_id = 2;
	optional int64 data_size = 3;
	optional string hash = 4;
};

message FileHashResponse {
	required bool ok = 1;
};

message BinaryDataRequest {
	enum TransferDirection {
		Upload = 2;
		Download = 1;
	}
	optional string file_name = 1;
	required int32 folder_id = 2;
	optional int32 recv_buffer_size = 3;
	optional int64 file_size = 4;
	optional TransferDirection direction = 5;
	optional bool one_shot = 6;
	optional int64 start_offset = 7;
};

message BinaryPacketHeader {
	optional int64 file_size = 1;
	optional int64 file_offset = 2;
	optional int32 hash_size = 3;
	
	enum SectionType {
		START = 0;
		MIDDLE = 1;
		END = 2;
	}
	optional SectionType binary_packet_type = 4;
};

message BinaryIncomingResponse {
	optional bool accepted = 1;
	optional int32 max_packet_size = 2;
	optional int64 current_file_size = 3;
};

message BinaryIncomingAck {
	optional bool ok = 1;
};
	
